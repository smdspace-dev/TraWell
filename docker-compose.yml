version: '3.8'

services:
  trawell-app:
    build: .
    container_name: trawell-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - trawell-network
    depends_on:
      - trawell-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  trawell-db:
    image: postgres:15-alpine
    container_name: trawell-database
    restart: unless-stopped
    environment:
      POSTGRES_DB: trawell_prod
      POSTGRES_USER: trawell_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-TraWell2024SecurePassword}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - trawell-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trawell_user -d trawell_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  trawell-nginx:
    image: nginx:alpine
    container_name: trawell-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - trawell-app
    networks:
      - trawell-network

  trawell-redis:
    image: redis:7-alpine
    container_name: trawell-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trawell-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  trawell-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
